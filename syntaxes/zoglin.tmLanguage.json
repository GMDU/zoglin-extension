{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Zoglin",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#commands"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.hash.zoglin",
					"match": "#.*"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.zoglin",
					"match": "\\b(include|import|as|return|if|else|while)\\b"
				},
				{
					"name": "storage.type.zoglin",
					"match": "\\b(namespace|module|fn|res|asset)\\b"
				}
			]
		},
		"commands": {
			"patterns": [
				{
					"begin": "^(?=\\s*(advancement|attribute|bossbar|clear|clone|damage|data|datapack|difficulty|effect|enchant|execute|experience|fill|fillbiome|forceload|function|gamemode|gamerule|give|item|kill|loot|particle|place|playsound|random|recipe|reload|ride|say|schedule|scoreboard|setblock|setworldspawn|spawnpoint|spectate|spreadplayers|stopsound|summon|tag|team|teleport|tellraw|time|title|tp|trigger|weather|worldborder|xp)\\b)",
					"end": "\\n",
					"contentName": "meta.embedded.command.mcfunction",
					"patterns": [
						{
							"include": "source.mcfunction"
						}
					]
				},
				{
					"begin": "^\\s*/",
					"end": "\\n",
					"contentName": "meta.embedded.command.mcfunction",
					"patterns": [
						{
							"include": "source.mcfunction"
						}
					]
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.zoglin",
			"match": "\\b\\d+(\\.\\d+)?\\b"
		},
		"identifiers": {
			"patterns": [
				{
					"name": "entity.name.function.zoglin",
					"match": "[a-z0-9/:~]+(?=\\s*\\()"
				},
				{
					"name": "variable.zoglin",
					"match": "[a-z0-9/:_~]+"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.zoglin",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.zoglin",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.zoglin",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.zoglin",
							"match": "\\\\."
						}
					]
				}
			]
		}
	},
	"scopeName": "source.zoglin"
}